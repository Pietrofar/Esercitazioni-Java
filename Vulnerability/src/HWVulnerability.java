
import java.util.Objects;

public class HWVulnerability extends Vulnerability{
    private String device;
    private boolean connected = true;

    //Metodo getter di device.
    public String getDevice(){
        return device;
    }

    // Costruttore.
    public HWVulnerability(int severity, boolean attackPattern, String device, boolean connected) {
        super(severity, attackPattern);
        this.device = device;
        this.connected = connected;
    }   

    //Metodo setter di device.H

    //Metodo setter di device.
    public void setDevice(String device){
        this.device = device;
    }

    //Metodo getter di connected.
    public boolean isConnected(){
        return connected;
    }

    //Metodo setter di connected.
    public void setConnection(Boolean connected){
        this.connected = connected;
    }

    //Definizione del metodo fix.
    @Override
    public void fix() {
        boolean interruptConnection = false; //Definizione dell variabile per poterla usare nel setter.
        setConnection(interruptConnection);
    }

    //Override del metodo equals.
    @Override
    public boolean equals(Object obj) {
        if(obj == this){              // Verifica del riferimento.
            return true;
        }

        if(!(obj instanceof HWVulnerability)){  // Controllo se obj Ã¨ un'istanza di HW.
            return false;
        }

        HWVulnerability other = (HWVulnerability) obj; // Casting sicuro.
        return device.equals(other.device);  //  HW sono uguali se riguardano lo stesso dispositivo.
    }

    //Override di HashCode per coerenza.
    @Override
    public int hashCode(){
        return Objects.hash(device);
    }

    @Override
    public String toString() {
        return "Severity: " + this.getSeverity() + " | AttackPattern: " + this.getAttackPattern() + " | Device: " +
        device + " | Connected: " + connected;
    }

    
    
}
