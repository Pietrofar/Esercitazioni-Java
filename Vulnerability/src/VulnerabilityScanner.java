import java.util.Scanner;

public class VulnerabilityScanner {
    public static void main(String[] args) {
        
        Lista lista = new Lista();
        
        HWVulnerability hw1 = new HWVulnerability(3, true, "Router", true);
        HWVulnerability hw2 = new HWVulnerability(1, false, "SmartTV", true);
        SWVulnerability sw1 = new SWVulnerability(4, true, "Apache", 8080);
        SWVulnerability sw2 = new SWVulnerability(2, false, "MySQL", 3306);
        SWVulnerability sw3 = new SWVulnerability(5, true, "Linux", 9009);

        lista.aggiungi(hw1);
        lista.aggiungi(hw2);
        lista.aggiungi(sw1);
        lista.aggiungi(sw2);
        lista.aggiungi(sw3);  
        
        mostraMenu(lista);

    }

    public static void mostraMenu(Lista lista){
        int scelta;

        try(Scanner scanner = new Scanner(System.in)){
            do { 
            
            // Menu.
            System.out.println("\n--- MENU DI VULNERABILITA ---");
            System.out.println("1. Aggiungi SW vulnerability.");
            System.out.println("2. Aggiungi HW vulnerability.");
            System.out.println("3. Stampa lista.");
            System.out.println("4. Stampa il numero di vulnerability SW e HW che sono exploitable.");
            System.out.println("5. Rimuovi le vulnerability non exploitable.");
            System.out.println("0. ESCI.");
            System.out.print("Scelta: ");
            
            scelta = scanner.nextInt();
            scanner.nextLine();
            
            switch(scelta){
                case 1:
                    // Aggiunta di un nuovo nodo Sw alla lista.
                    System.out.print("Softwere: ");
                    String sw = scanner.nextLine();
                    System.out.println("Ports (int): ");
                    int portSW = scanner.nextInt();
                    System.out.println("Severity (int): ");
                    int sevSW = scanner.nextInt();
                    System.out.println("AttackPattern (true/false): ");
                    boolean apSW = scanner.nextBoolean();
                    
                    SWVulnerability SW = new SWVulnerability(sevSW, apSW, sw, portSW);
                    lista.aggiungi(SW);
                    break;
                    
                case 2:
                    // Aggiunta di un nodo HW alla lista.
                    System.out.print("Hardwere: ");
                    String hw = scanner.nextLine();
                    System.out.println("Connected (true/false): ");
                    boolean cnHW = scanner.nextBoolean();
                    System.out.println("Severity (int): ");
                    int sevHW = scanner.nextInt();
                    System.out.println("AttackPattern (true/false): ");
                    boolean apHW = scanner.nextBoolean();
                    
                    HWVulnerability HW = new HWVulnerability(sevHW, apHW, hw, cnHW);
                    lista.aggiungi(HW);
                    break;
                    
                case 3:
                    lista.stampa();
                    break;
                    
                case 4:
                    System.out.println();
                    lista.numberExploitable();
                    break;
                    
                case 5:
                    lista.removeNotExploitable();
                    System.out.println("\nSi vuole stampare la lista aggiornata?");
                    System.out.print("Scelta (true/false): ");  // Scelta dell'utente.
                    boolean nwScelta = scanner.nextBoolean();

                    if(nwScelta){
                        lista.stampa();  // Lista aggiornata.
                    }

                    break;
                    
                case 0:
                    break;
                    
                default:
                    System.out.println("Scelta non valida.");
        }

    }while(scelta != 0);  // Continua a stampare menu (e scelta) finch√® non si sceglie 0.
   }

   System.out.println("PROGRAMMA TERMINATO.");
 }
}







